<?xml version="1.0"?>

<launch>
  
  <!-- Put everything in the 'mantis' namespace by default using the 'group' tag -->
  <group ns="mantis" >
    <!-- Parse the URDF file and load it into the 'robot_description' ROS parameter -->
    <param name="robot_description" command="$(find xacro)/xacro.py '$(find mantis_model)/urdf/mantis.urdf.xacro'" />

    <!-- Run the robot_state_publisher node that takes the description parameter and manages all the TF frames -->
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" >
      <param name="tf_prefix" value="mantis" />
    </node>

    <!-- Spawn the model in Gazebo -->
    <node pkg="gazebo_ros" type="spawn_model" name="spawn_mantis" args="-urdf -param robot_description -model mantis" />
    
    <!-- Run the roscontrol simulation of the drive motors -->
    <rosparam file="$(find mantis_model)/yaml/roscontrol_params.yaml" />    
    <node pkg="controller_manager" type="spawner" name="controller_spawner" args="joint_state_controller left_wheel_controller right_wheel_controller --shutdown-timeout 0.5" />

    <!-- Run laser filters to filter out unwanted LIDAR points that hit the robot's frame -->
    <node ns="laser" pkg="laser_filters" type="scan_to_scan_filter_chain" name="laser_filter" >
      <rosparam file="$(find mantis_model)/yaml/laser_filter_params.yaml" />
    </node>
  </group>

</launch>
